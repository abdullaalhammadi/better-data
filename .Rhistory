indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
library(tidyverse)
library(glue)
df
##dfcount <- df %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
df
?df
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(df){
df <- df %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(df) > 1) {
print(df)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(df){
df <- df %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(df) > 1) {
print(df)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile
library(tidyverse)
library(glue)
workfile
dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(df){
df <- df %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(df) > 1) {
print(df)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile
library(tidyverse)
library(glue)
workfile
##dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
check_doubles <- function(df){
df <- df %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(df) > 1) {
print(df)
}
else print("There are no inconsistencies between the cells")
}
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(df){
df <- df %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(df) > 1) {
print(df)
}
else print("There are no inconsistencies between the cells")
}
check_doubles <- function(x){
x <- x %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(x) > 1) {
print(x)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile
library(tidyverse)
library(glue)
workfile
##dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
library(tidyverse)
library(glue)
workfile
##dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
library(tidyverse)
library(knitr)
workfile
##dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
knitr::opts_chunk$set(error = TRUE)
library(tidyverse)
library(knitr)
workfile
knitr::opts_chunk$set(error = TRUE)
library(tidyverse)
library(knitr)
workfile
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(x){
x <- x %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(x) > 1) {
print(x)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
workfile
knitr::opts_chunk$set(error = TRUE)
library(tidyverse)
library(knitr)
workfile
##dfcount <- workfile %>% count(severity)
##indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
##indexlegend
##df <- df %>% left_join(indexlegend)
##kable(head(df))
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
indexlegend
workfile <- workfile %>% left_join(indexlegend)
kable(head(workfile))
View(workfile)
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
indexlegend
workfile <- workfile %>% left_join(indexlegend)
kable(head(workfile))
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
indexlegend
workfile <- workfile %>% left_join(indexlegend)
workfile
##kable(head(workfile))
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
indexlegend
workfile <- workfile %>% left_join(indexlegend)
workfile
##kable(head(workfile))
knitr::opts_chunk$set(error = TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
indexlegend
workfile <- workfile %>% left_join(indexlegend)
workfile
##kable(head(workfile))
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
workfile <- workfile %>% left_join(indexlegend)
kable(head(workfile))
library(tidyverse)
library(knitr)
dfcount <- workfile %>% count(severity)
indexlegend <- dfcount %>% dplyr::select(severity) %>% na.omit() %>% mutate(severity_ID = c(2, 3, 1))
workfile <- workfile %>% left_join(indexlegend)
kable(head(workfile))
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(x){
x <- x %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(x) > 1) {
print(x)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
kable(head(workfile))
git remote add origin git@github.com:abdullaalhammadi/better-data.git
knitr::opts_chunk$set(error = TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
knitr::opts_chunk$set(error = TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
kable(head(workfile))
check_doubles <- function(x){
x <- x %>%
group_by(acci_id) %>%
filter(n_distinct(acci_name) > 1)
if(nrow(x) > 1) {
print(x)
}
else print("There are no inconsistencies between the cells")
}
library(lubridate)
library(tidyverse)
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
kable(head(workfile))
knitr::opts_chunk$set(error = TRUE)
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
workfile %>% mutate(date = date(acci_time)) %>% count(is.na(date) == TRUE)
workfile %>% mutate(incident_date = date(acci_time)) %>%
mutate(incident_day = day(acci_time), Incident_month = month(acci_time)) %>%
group_by(Incident_month) %>% count(incident_day) %>%
count(Incident_month)
workfile <- workfile %>% separate(acci_name, c("Incident_type", "severity"), sep = "- |-")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
Sys.setlocale("LC_CTYPE","arabic")
library(readxl)
library(knitr)
library(tidyverse)
workfile <- read_excel("E:\\Fedora Media Writer\\Miscellanous\\FCSA project-20200806T165957Z-001\\FCSA project\\Work files\\traffic_incidents.xlsx")
rm(list=ls())
library(tidyverse)
library(httr)
library(jsonlite)
library(lubridate)
library(TTR)
rm(list=ls())
library(tidyverse)
library(httr)
library(jsonlite)
library(lubridate)
library(TTR)
rm(list=ls())
library(tidyverse)
library(httr)
library(jsonlite)
library(lubridate)
library(TTR)
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1Min?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC))) %>% content(as = 'parsed')
##test1 <- test[]
##result <- lapply(test1$SBUX  , as.data.frame) %>% bind_rows()
##result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- result %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC))) %>% content(as = 'parsed')
##test1 <- test[]
##result <- lapply(test1$SBUX  , as.data.frame) %>% bind_rows()
##result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- result %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
##test1 <- test[]
##result <- lapply(test1$SBUX  , as.data.frame) %>% bind_rows()
##result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- result %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC))) %>% content()
##test1 <- test[]
##result <- lapply(test1$SBUX  , as.data.frame) %>% bind_rows()
##result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- result %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
test
test %>% fromJSON()
test
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
##test1 <- test[]
##result <- lapply(test1$SBUX  , as.data.frame) %>% bind_rows()
##result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- result %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
test
test %>% fromJSON()
test %>% content("text")
test %>% content("text") %>% fromJSON()
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
test <- test %>% content("text") %>% fromJSON()
result$t <- result$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
test <- test %>% content("text") %>% fromJSON()
test$t <- test$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
final <- test %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
test <- test %>% content("text") %>% fromJSON()
test
##test$t <- test$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- test %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
API_KEY <- 'PKSUO4M1BYWXLV7DU3E9'
SKC <- 'BpAGb/R2GgQrHtmCqevw1ROrEkFBXTOdDIpC2onk'
test <- GET("https://data.alpaca.markets/v1/bars/1D?symbols=SBUX&start=2020-04-06T09:30:00-04:00&end=2020-07-16T16:00:00-04:00", add_headers(c('APCA-API-KEY-ID'  = API_KEY, 'APCA-API-SECRET-KEY' = SKC)))
test <- test %>% content("text") %>% fromJSON()
test
test$t <- test$t %>% as.POSIXct(origin="1970-01-01", tz = "America/New_York")
##final <- test %>% mutate(mins_from_midnight = 60*hour(t) + minute(t)) %>% filter(mins_from_midnight %in% 570:945)
##final
## To filter out hours and minutes, we converted hours to minutes and added the minutes, then filtered from how many minutes is it from midnight.   e.g: I wanted to filter results after 9:30. so I multiplied 9 by 60 to get 540 minutes, then added 30 minutes, which makes it in total 570    minutes from midnight, then filtered results greater than or equal to 570 minutes from midnight, which are the results from 9:30 onward.
pdf_book()
library(bookdown)
pdf_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
tinytex::install_tinytex()
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
tinytex
tinytex::install_tinytex()
tinytex::tinytex_root()
tinytex::install_tinytex()
tinytex:::is_tinytex()
